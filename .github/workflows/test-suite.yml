name: 🧪 Test Suite
# 測試套件：運行所有測試確保代碼品質

on:
  push:
    branches: [main, dev]
    paths:
      - 'petsard/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/test-suite.yml'
  pull_request:
    branches: [main, dev]
    paths:
      - 'petsard/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/test-suite.yml'

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    continue-on-error: true  # 不強制要求測試通過才能合併
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🐍 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: 📦 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
            
      - name: 🔧 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: 🧪 Run Unit Tests
        id: unit-tests
        run: |
          echo "## 🧪 測試結果 Test Results" >> test_report.md
          echo "" >> test_report.md
          echo "**Python 版本**: ${{ matrix.python-version }}" >> test_report.md
          echo "**執行時間**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> test_report.md
          echo "" >> test_report.md
          
          # 運行測試並捕獲結果
          if pytest tests/ --tb=short -v --disable-warnings > test_output.txt 2>&1; then
            echo "test_status=success" >> $GITHUB_OUTPUT
            echo "### ✅ 測試通過 Tests Passed" >> test_report.md
          else
            echo "test_status=failed" >> $GITHUB_OUTPUT
            echo "### ❌ 測試失敗 Tests Failed" >> test_report.md
          fi
          
          echo "" >> test_report.md
          echo "```" >> test_report.md
          cat test_output.txt >> test_report.md
          echo "```" >> test_report.md
          
      - name: 🧪 Run Functional Tests
        id: functional-tests
        run: |
          echo "" >> test_report.md
          echo "### 🔄 功能測試 Functional Tests" >> test_report.md
          echo "" >> test_report.md
          
          if pytest tests/test_petsard.py -v --disable-warnings > functional_output.txt 2>&1; then
            echo "functional_status=success" >> $GITHUB_OUTPUT
            echo "✅ **功能測試通過** Functional tests passed" >> test_report.md
          else
            echo "functional_status=failed" >> $GITHUB_OUTPUT
            echo "❌ **功能測試失敗** Functional tests failed" >> test_report.md
          fi
          
          echo "" >> test_report.md
          echo "```" >> test_report.md
          cat functional_output.txt >> test_report.md
          echo "```" >> test_report.md
          
      - name: 📊 Generate Test Summary
        run: |
          echo "" >> test_report.md
          echo "### 📊 測試摘要 Test Summary" >> test_report.md
          echo "" >> test_report.md
          
          if [[ "${{ steps.unit-tests.outputs.test_status }}" == "success" && "${{ steps.functional-tests.outputs.functional_status }}" == "success" ]]; then
            echo "🎉 **所有測試通過！** All tests passed!" >> test_report.md
            echo "test_overall=success" >> $GITHUB_ENV
          else
            echo "⚠️ **部分測試失敗** Some tests failed" >> test_report.md
            echo "test_overall=failed" >> $GITHUB_ENV
          fi
          
          echo "" >> test_report.md
          echo "---" >> test_report.md
          echo "*此報告由測試套件自動生成 | Auto-generated by Test Suite*" >> test_report.md
          
      - name: 💬 Comment Test Results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('test_report.md', 'utf8');
            
            // 檢查是否已有測試結果留言
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🧪 測試結果 Test Results')
            );
            
            const commentBody = `## 🧪 測試套件報告 Test Suite Report\n\n${report}`;
            
            if (botComment) {
              // 更新現有留言
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // 創建新留言
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
            
      - name: 📤 Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-python-${{ matrix.python-version }}
          path: |
            test_output.txt
            functional_output.txt
            test_report.md
          retention-days: 7
          
      - name: ℹ️ Test Status Summary
        if: always()
        run: |
          if [[ "$test_overall" == "success" ]]; then
            echo "::notice::🎉 所有測試通過！All tests passed for Python ${{ matrix.python-version }}"
          else
            echo "::warning::⚠️ 部分測試失敗，但不會阻止合併。Some tests failed for Python ${{ matrix.python-version }}, but merge is not blocked."
          fi