name: Image Building and Publishing

on:
  push:
    branches:
      - main
      - dev
    tags: ["v*.*.*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'nics-tw/petsard'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Debug - Check current version (after semantic release)
      #   if: github.event_name == 'workflow_run'
      #   run: |
      #     echo "Building variant: ${{ matrix.variant.name }}"
      #     echo "Event: ${{ github.event_name }}"
      #     echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
      #     echo "Head branch: ${{ github.event.workflow_run.head_branch }}"
      #     echo "Current ref: ${{ github.ref }}"
      #     echo "Current SHA: ${{ github.sha }}"

      #     # 檢查 pyproject.toml 中的版本號
      #     if [ -f "pyproject.toml" ]; then
      #       echo "=== pyproject.toml version ==="
      #       grep -E "^version\s*=" pyproject.toml || echo "Version tag was not found in pyproject.toml"
      #     fi

      #     # 檢查最新的 Git 標籤
      #     echo "=== Latest Git tags ==="
      #     git tag --sort=-version:refname | head -5 || echo "No tags found"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
          flavor: |
            latest=auto

      - name: test
        id: test
        run: |
          echo "meta: ${{ steps.meta.outputs.tags}}"

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=gha,src=/tmp/.buildx-cache
          cache-to: type=gha,dest=/tmp/.buildx-cache-new,mode=max

      # https://github.com/docker/build-push-action/issues/252 / https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          if [ -f /tmp/.builx-cache ]; then rm -rf /tmp/.buildx-cache fi
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Cleanup untagged images
        uses: actions/delete-package-versions@v5
        with:
          package-name: "petsard"
          package-type: "container"
          delete-only-untagged-versions: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Generate artifact attestation
      #   if: github.event_name != 'pull_request'
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.build-and-push.outputs.digest }}
      #     push-to-registry: true
