version: '3.8'

services:
  petsard:
    build:
      context: .
      dockerfile: Dockerfile
    image: petsard:latest
    container_name: petsard-dev
    volumes:
      # 掛載當前目錄到容器中，方便開發
      - .:/workspace
      # 掛載資料目錄
      - ./demo:/app/demo
      # 掛載輸出目錄
      - ./output:/app/output
    working_dir: /workspace
    environment:
      - PYTHONPATH=/workspace:/app
      - PYTHONUNBUFFERED=1
    # 保持容器運行
    command: tail -f /dev/null
    # 或者直接進入 bash
    # command: bash

  # 用於運行範例的服務
  petsard-demo:
    build:
      context: .
      dockerfile: Dockerfile
    image: petsard:latest
    container_name: petsard-demo
    volumes:
      - ./demo:/app/demo
      - ./output:/app/output
    working_dir: /app/demo
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    # 運行特定的範例
    command: >
      python -c "
      import sys;
      sys.path.append('/app');
      from petsard.executor import Executor;
      print('🚀 PETsARD Demo Container Ready!');
      print('Available demos in /app/demo/');
      import os;
      for root, dirs, files in os.walk('/app/demo'):
          for file in files:
              if file.endswith('.yaml'):
                  print(f'  - {os.path.join(root, file)}')
      "

  # 用於 Jupyter Notebook 的服務
  petsard-jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    image: petsard:latest
    container_name: petsard-jupyter
    ports:
      - "8888:8888"
    volumes:
      - .:/workspace
      - ./demo:/app/demo
      - ./notebooks:/app/notebooks
    working_dir: /workspace
    environment:
      - PYTHONPATH=/workspace:/app
      - PYTHONUNBUFFERED=1
    command: >
      bash -c "
      pip install jupyter notebook &&
      jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
      "

networks:
  default:
    name: petsard-network