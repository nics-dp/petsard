classDiagram

    class ConstrainerAdapter {
        +config: dict
        +constrainer: Constrainer
        +sample_dict: dict
        +__init__(config)
        +run() DataFrame
        -_transform_field_combinations(config) dict
    }

    class Constrainer {
        +config: dict
        +constrainers: dict
        +apply(df) DataFrame
        +resample_until_satisfy() DataFrame
        +register(name, class)
    }

    class NaNGroupConstrainer {
        +apply(df) DataFrame
    }

    class FieldConstrainer {
        +apply(df) DataFrame
    }

    class FieldCombinationConstrainer {
        +apply(df) DataFrame
    }

    class FieldProportionsConstrainer {
        +apply(df) DataFrame
    }

    ConstrainerAdapter ..> Constrainer : uses for constraint processing
    Constrainer --> NaNGroupConstrainer : manages
    Constrainer --> FieldConstrainer : manages
    Constrainer --> FieldCombinationConstrainer : manages
    Constrainer --> FieldProportionsConstrainer : manages

    %% Style definitions
    class ConstrainerAdapter {
        <<Main Class>>
    }
    style ConstrainerAdapter fill:#E6E6FA

    class Constrainer {
        <<Core Module>>
    }
    style Constrainer fill:#4169E1,color:#fff

    style NaNGroupConstrainer fill:#9370DB,color:#fff
    style FieldConstrainer fill:#9370DB,color:#fff
    style FieldCombinationConstrainer fill:#9370DB,color:#fff
    style FieldProportionsConstrainer fill:#9370DB,color:#fff

    note for ConstrainerAdapter "1. Supports YAML file loading via constraints_yaml parameter\n2. Simple mode: apply() for direct filtering\n3. Resampling mode: resample_until_satisfy() for iterative generation\n4. Applies constraints sequentially"