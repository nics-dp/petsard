# Multi-stage build for development environment with full Jupyter support
# 多階段建置開發環境，包含完整 Jupyter 支援
FROM python:3.11-slim AS builder

# Install build dependencies and system tools
# 安裝建置依賴和系統工具
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
# 設定工作目錄
WORKDIR /app

# Copy dependency files first for better layer caching
# 先複製依賴檔案以優化層快取
COPY pyproject.toml ./

# Upgrade pip to latest version
# 升級 pip 到最新版本
RUN pip install --no-cache-dir --upgrade pip

# Install Python dependencies from pyproject.toml
# 從 pyproject.toml 安裝 Python 依賴
RUN pip install --no-cache-dir \
    numpy pandas scipy scikit-learn torch \
    faker pydantic pyyaml click rich tqdm \
    matplotlib seaborn plotly networkx \
    --timeout 300 --retries 3

# Install development dependencies including full Jupyter environment
# 安裝開發依賴，包含完整 Jupyter 環境
RUN pip install --no-cache-dir \
    jupyter \
    jupyterlab \
    notebook \
    ipykernel \
    ipywidgets \
    pytest \
    pytest-cov \
    ruff \
    mypy \
    black \
    isort \
    pre-commit \
    sphinx \
    sphinx-rtd-theme \
    myst-parser \
    --timeout 300 --retries 3

# Copy source code
# 複製原始碼
COPY petsard/ ./petsard/
COPY demo/ ./demo/
COPY templates/ ./templates/
COPY README.md LICENSE CHANGELOG.md ./

# Install PETsARD package in development mode
# 以開發模式安裝 PETsARD 套件
RUN pip install --no-cache-dir -e .

# Development stage with full tooling
# 開發階段，包含完整工具
FROM python:3.11-slim AS development

# Install runtime dependencies and development tools
# 安裝運行時依賴和開發工具
RUN apt-get update && apt-get install -y \
    --no-install-recommends \
    git \
    curl \
    wget \
    vim \
    nano \
    htop \
    tree \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set environment variables for Python optimization and Jupyter
# 設定 Python 優化和 Jupyter 環境變數
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV JUPYTER_ENABLE_LAB=yes
ENV JUPYTER_TOKEN=""
ENV JUPYTER_ALLOW_ROOT=1

# Create non-root user with specific UID for development
# 建立特定 UID 的非 root 使用者用於開發
RUN useradd --create-home --shell /bin/bash --uid 1000 petsard

# Set working directory
# 設定工作目錄
WORKDIR /app

# Copy installed packages and application from builder stage
# 從建置階段複製已安裝的套件和應用程式
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /app /app

# Create directories for Jupyter notebooks and data
# 建立 Jupyter notebook 和資料目錄
RUN mkdir -p /app/notebooks /app/data /app/output && \
    chown -R petsard:petsard /app

# Switch to non-root user for development
# 切換到非 root 使用者進行開發
USER petsard

# Expose Jupyter Lab port
# 暴露 Jupyter Lab 埠
EXPOSE 8888

# Add health check for development environment
# 新增開發環境健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import petsard, jupyter_core; from importlib.metadata import version; print(f'PETsARD v{version(\"petsard\")} + Jupyter v{version(\"jupyter\")} OK')" || exit 1

# Set default command to start Jupyter Lab
# 設定預設指令啟動 Jupyter Lab
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--NotebookApp.token=''", "--NotebookApp.password=''"]

# Metadata labels for container registry
# 容器註冊表的元資料標籤
ARG BUILD_DATE
ARG VCS_REF
LABEL maintainer="matheme.justyn@gmail.com" \
      description="PETsARD Development Environment - Privacy Enhancing Technologies Analysis, Research, and Development with Jupyter" \
      org.opencontainers.image.source="https://github.com/nics-tw/petsard" \
      org.opencontainers.image.documentation="https://nics-tw.github.io/petsard/" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.title="PETsARD Development Environment" \
      org.opencontainers.image.description="Full development environment with Jupyter Lab, all dev tools, and PETsARD"