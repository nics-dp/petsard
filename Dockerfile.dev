# Single-stage optimized build for development environment using Alpine
# 單階段優化建置開發環境使用 Alpine
FROM python:3.11-alpine

# Install system dependencies in a single layer and clean up
# 單層安裝系統依賴並清理
RUN apk add --no-cache \
    build-base \
    git \
    curl \
    bash \
    linux-headers

# Set environment variables for Python optimization and Jupyter
# 設定 Python 優化和 Jupyter 環境變數
ENV PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    JUPYTER_ENABLE_LAB=yes \
    JUPYTER_TOKEN="" \
    JUPYTER_ALLOW_ROOT=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create non-root user and directories (Alpine compatible)
# 建立非 root 使用者和目錄 (Alpine 相容)
RUN adduser -D -u 1000 -s /bin/bash petsard && \
    mkdir -p /app/notebooks /app/data /app/output

# Set working directory
# 設定工作目錄
WORKDIR /app

# Copy and install dependencies in optimal order
# 以最佳順序複製並安裝依賴
COPY pyproject.toml ./

# Upgrade pip and install dependencies in single command
# 升級 pip 並單一指令安裝依賴
RUN pip install --upgrade pip && \
    pip install --no-cache-dir \
    # Core dependencies
    numpy pandas scipy scikit-learn \
    faker pydantic pyyaml click rich tqdm \
    matplotlib seaborn plotly networkx \
    # Jupyter environment (minimal)
    jupyterlab ipykernel ipywidgets \
    # Essential dev tools only
    pytest pytest-cov ruff black

# Copy source code
# 複製原始碼
COPY petsard/ ./petsard/
COPY demo/ ./demo/
COPY templates/ ./templates/
COPY README.md ./

# Install PETsARD package and clean up
# 安裝 PETsARD 套件並清理
RUN pip install --no-cache-dir -e . && \
    find /usr/local/lib/python3.11 -name "*.pyc" -delete && \
    find /usr/local/lib/python3.11 -name "__pycache__" -type d -exec rm -rf {} + || true

# Change ownership and switch to non-root user
# 變更擁有者並切換到非 root 使用者
RUN chown -R petsard:petsard /app
USER petsard

# Expose Jupyter Lab port
# 暴露 Jupyter Lab 埠
EXPOSE 8888

# Optimized health check
# 優化健康檢查
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=2 \
    CMD python -c "import petsard; print('PETsARD OK')" || exit 1

# Set default command to start Jupyter Lab
# 設定預設指令啟動 Jupyter Lab
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root", "--NotebookApp.token=''", "--NotebookApp.password=''"]

# Metadata labels for container registry
# 容器註冊表的元資料標籤
ARG BUILD_DATE
ARG VCS_REF
LABEL maintainer="matheme.justyn@gmail.com" \
      description="PETsARD Development Environment - Privacy Enhancing Technologies Analysis, Research, and Development with Jupyter" \
      org.opencontainers.image.source="https://github.com/nics-tw/petsard" \
      org.opencontainers.image.documentation="https://nics-tw.github.io/petsard/" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.title="PETsARD Development Environment" \
      org.opencontainers.image.description="Full development environment with Jupyter Lab, all dev tools, and PETsARD"