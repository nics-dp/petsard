# ......
# The dependency management for this package is maintained using Poetry.
# Below are the related commands documented:
# 本套件之相依性維護使用 Poetry，以下紀錄相關指令：
#
# ......
# Setting up a new virtual environment
# 新設定虛擬環境
#
# 1. poetry config virtualenvs.in-project true
#    - Limit virtual environment to not add random strings.
#    - 限制虛擬環境不添加隨機字符串。
# 2. poetry env use python
#    - Ensure that your Python is linked to a valid Python version.
#    - 確保您的 Python 鏈接到有效的 Python 版本。
# 3. poetry shell
#    - Activate virtual environment.
#    - 啟動虛擬環境。
# 4. poetry lock
#    - Install the required packages based on poetry.lock.
#    - 依據 poetry.lock 安裝所需的套件。
#
# ......
# Set dependencies and their versions.
# 設定相依性套件與版本
#
#    General environment
#    一般環境
#     1. pyyaml and wheel
#        - see below for details
#        - 詳情見下文
#     2. poetry add sdv@^1.8.0 smartnoise-synth@^1.0.0 anonymeter@^1.0.0 sdmetrics@^0.13.0
#        - key libraries: Synethezer and Evaluator
#        - 關鍵套件：合成器與評估器
#     3. poetry add requests boto3
#        - for Loader
#        - 用於 Loader
#     4. poetry add toml tqdm
#        - TODO: They will sunset if new Executor is available.
#        - 如果新的 Executor 上線，將會停用
#
#    Development environment
#    開發環境
#
#    1. poetry add --group dev ipykernel pytest
#
#    TODO: add back sagemaker in group dev when ready
#          當準備好時，將 sagemaker 加回 dev 群組
#
# ......
# Special installation method
# 特殊安裝方法
#
# Due to the current dependency requiring pyyaml version 5.4.1,
#     which cannot be installed using the PEP 517 method,
#     the current executable version (as of 2024/02/15)
#     requires the following installation method:
# 由於目前的相依性需要 pyyaml 為 5.4.1，
#     但本版本的 pyyaml 無法以遵照 PEP 517 的辦法來安裝，
#     故現行 (2024/02/15) 的可執行版本，需要先執行以下安裝方式：
#
# 1. poetry add wheel
# 2. poetry run pip install --no-build-isolation "pyyaml==5.4.1"
#
# ......
# Output requirement.txt
# 輸出 requirement.txt
#
# 1. poetry export -f requirements.txt -o requirements.txt
#    - Export development environment to requirements-dev.txt.
#    - 輸出開發環境的 requirements.txt。
# 2. poetry export -f requirements.txt -o requirements-dev.txt --with dev
#    - Export development environment to requirements-dev.txt.
#    - 輸出開發環境的 requirements.txt。
#
# ......
# Dependencies version in key libraries
# 關鍵套件相依性版本
#
# 1. SDV: 1.8 above
#    - https://github.com/sdv-dev/SDV
#    - 1.9 update: 2024/01/11
# 2. SDMetrics: 0.13 above
#    - https://github.com/sdv-dev/SDMetrics
#    - Latest 0.13.0 update: 2023/12/04
# 3. anonymeter: 0.0.2 above
#    - https://github.com/statice/anonymeter
#    - Latest 0.0.2 update: 2023/07/15
# 4. smartnoise-synth: 0.3.3 above
#    - https://github.com/opendp/smartnoise-sdk
#    - 0.3.3 update: undefined, but nearest 0.3.0 is 2022/10/09
#    - Latest 1.0.2 update: 2023/11/05
#
# ......

[tool.poetry]
name = "petsard"
version = "0.7.0"
description = "Facilitates data generation algorithm and their evaluation processes"
authors = [
    "alexchen830 <alexchen830@gmail.com>",
    "matheme-justyn <matheme.justyn@gmail.com>"
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
wheel = "^0.42.0"
pyyaml = "^5.4.1"
sdv = "^1.9.0"
smartnoise-synth = "^0.3.3"
anonymeter = "^1.0.0"
sdmetrics = "^0.13.0"
requests = "^2.31.0"
boto3 = "^1.34.37"
toml = "^0.10.2"
tqdm = "^4.66.1"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.2"
pytest = "^8.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
